{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,IACFI,QAAQC,MACRP,EAAQ,CAAEH,WAAUC,WAGtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,KAjDM,CACXU,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYlB,EAAKgB,EAALhB,MAAOmB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrBC,EAAaC,OAAOtB,EAAMuB,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,QAOpC,SAA2BvB,EAAOmB,EAAMC,GAGtC,IAFA,IAAIM,EAAO1B,EAEF2B,EAAI,EAAGA,GAAKP,EAAQO,GAAK,EAChC7B,EAAc6B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAU+B,EAAKD,EAAL7B,MACjBJ,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANH,EAAM,O,IAE9DI,OAAM,SAAAL,G,IAAG9B,EAAQ8B,EAAR9B,SAAU+B,EAAKD,EAAL7B,MAClBJ,EAAAmC,OAAOI,QAAQ,sBAAqCF,OAAflC,EAAS,QAAYkC,OAANH,EAAM,O,IAG9DJ,GAAQP,C,EAjBViB,CAAkBf,EAAYG,EAAWC,GAEzCX,EAAEG,cAAcoB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  initCreatePromise(delayValue, stepValue, amountValue);\n\n  e.currentTarget.reset();\n}\n\nfunction initCreatePromise(delay, step, amount) {\n  let time = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, time)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n\n    time += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        console.log();\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","delayValue","Number","value","stepValue","amountValue","time","i","then","param","_$delay","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$initCreatePromise","reset"],"version":3,"file":"03-promises.e8507246.js.map"}